version: "3"
services:
  polls:
    build:
        context: ./app
        dockerfile: dockerfile
    volumes:
      - ./app:/code/app
    ports:
        - 8008:8008
    depends_on:
        - "postgres"
    environment:
        SECRET_KEY: ${SECRET_KEY:-sh82G-2L4Eq3-23w4T5-O5y64}
        POSTGRES_DB: "pollsdb"
        POSTGRES_USER: "pollsuser"
        POSTGRES_PASSWORD: "pgpwd4polls"
        DATABASE_URL: postgresql://shopuser:pgpwd4shop@postgres:5432/shopdb
    command: >
        sh -c "./wait-for-it.sh -t 0 postgres:5432 -- echo 'postgresql is up'
        && python app/manage.py runserver"
  postgres:
    image: postgres:14.2
    environment:
        POSTGRES_DB: "pollsdb"
        POSTGRES_USER: "pollsuser"
        POSTGRES_PASSWORD: "pgpwd4polls"
        PGDATA: "/var/lib/postgresql/data/pgdata"
  balancer:
    image: traefik:2.7
    command: --api.insecure=true --providers.docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "8080:8080"
      - "80:80"
  whoami:
    # A container that exposes an API to show its IP address
    image: traefik/whoami
    deploy:
      replicas: 2
    labels:
      - "traefik.http.routers.whoami.rule=Host(`whoami.docker.localhost`)"

